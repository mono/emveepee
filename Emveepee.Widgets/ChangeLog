2009-09-03  Mike Kestner <mkestner@novell.com>

	* StartPage.cs: add Quick Sessions section to repeat configs from
	the history.

2009-09-03  Mike Kestner <mkestner@novell.com>

	* History.cs: add recent config support.
	* ProfileConfiguration.cs: new encapsulation for profile params.
	* ProfilerProcess.cs: construct from ProfileConfiguation.
	* ProfileSetupDialog.cs: expose Config prop.  Manage the Execute
	response button sensitivity proactively.

2009-08-28  Mike Kestner <mkestner@novell.com>

	* StartPage.cs: a little banner gradient tweaking.

2009-08-28  Mike Kestner <mkestner@novell.com>

	* History.cs: basic history tracking xml serialized class.
	* StartPage.cs: display recent logs using new history.

2009-08-27  Mike Kestner <mkestner@novell.com>

	* StartPage.cs: beginnings of a startup page similar to MD.

2009-08-19  Mike Kestner <mkestner@novell.com>

	* ProfilerProcess.cs: new class to manage creation of and comm
	with the profiler.  Initial suspend/resume capability.
	* ProfileSetupDialog.cs: add StartEnabled feature to control logging
	status on startup.
	* ProfileView.cs: use new reader iteration paradigm.

2009-08-04  Mike Kestner <mkestner@novell.com>

	* ProfileView.cs: add SupportsFiltering prop to support action 
	sensitivity in menu.

2009-07-30  Mike Kestner <mkestner@novell.com>

	* Node.cs: add a DescendingValue comparison.

2009-07-15  Mike Kestner <mkestner@novell.com>

	* AllocationsView.cs: make it a ScrolledWindow subclass.
	* CallsView.cs: make it a ScrolledWindow subclass.
	* DisplayOptions.cs: file rename
	* ProfileSetupDialog.cs: add support for stat profiling. default to
	stat profiling.
	* ProfileView.cs: not scrollable, the child views manage their own
	scrolling now. Load profiles by data content instead of explicitly.
	Close the reader when done loading to avoid access sharing problems.
	* StatDetail.cs: notebook to display calls and callers info for 
	statistical hit items.
	* StatList.cs: ordered list widget for statistical hit items.
	* StatStore.cs: list store for statistical profile data.
	* StatView.cs: paned view to hold stat list and detail views and
	managed selection changes.

2009-06-19  Mike Kestner <mkestner@novell.com>

	* CallsStore.cs: add child node compression for filtered libraries.
	Retrieves a list of filtered libraries from the DisplayOptions and 
	"flattens" library calls within the set to hide internal implementation
	nodes.  Prunes the tree to better visualize user code.
	* DisplayOptions.cs: initial pass at a filtering options class. Adds
	ShowSystemNodes option and first pass at a Filters array for filtered
	libraries which will be user configurable eventually.
	* ProfileView.cs: replace Type prop and set_LogFile with a LoadProfile
	method to make the operation atomic.
	* *.cs : hooks to enable DisplayOptions.

2009-06-17  Mike Kestner <mkestner@novell.com>

	* ProfileSetupDialog.cs: add dialog to begin to add configurability
	to the profiler invocation.  Supports alloc and calls switches as
	well as selecting assembly to execute.
	* ProfileView.cs: add ProfileType prop to support explicit view setup.
	Conditionally construct child view type when LogFile is set.

2009-06-17  Mike Kestner <mkestner@novell.com>

	* CallsView.cs: Reorder columns to put cost first.

2009-06-17  Mike Kestner <mkestner@novell.com>

	* AllocationsStore.cs: Allocations subclass of the new ProfileStore.
	* AllocationsView.cs: new Allocations tree view.
	* CallsStore.cs: refactor as ProfileStore subclass with CallsNode
	subclass.
	* Node.cs: super class for Calls and Allocations tree nodes.
	* ProfileStore.cs: super class for Calls and Allocations stores.

2009-06-12  Massimiliano Mantione <massi@ximian.com>
	* CallsStore.cs: Get the root frames from the event handler now.

2009-06-11  Mike Kestner <mkestner@novell.com>

	* CallsStore.cs: add license.
	* CallsView.cs: new internal treeview subclass for calls data.
	* ProfileView.cs: new scrolled window class to load profile logs and
	manage different profile view types.

2009-06-09  Mike Kestner <mkestner@novell.com>

	* CallsStore.cs: use StackTrace objects to navigate the call tree
	and obtain context appropriate clicks info.  Fix a bug in the GetIter
	path traversal logic for trees deeper than 2 levels.

2009-05-21  Mike Kestner <mkestner@novell.com>

	* *: initial checkin.  beginnings of a widget library for profiler
	output display and navigation.

